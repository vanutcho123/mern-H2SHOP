{
  "name": "mern-h2shop",
  "version": "1.0.0",
  "description": "1. Create-react-app\r 2. SetUp\r    1. Npm i sass\r 3. List Products\r    1. Create products array\r    2. Add Product images\r    3. Render products\r    4. Style Products\r 4. Add Routing\r    1. npm i react-route-dom\r    2. Create file route\r    3. Create route for product\r 5. Create Node.JS Server\r    1. Run npm init in root folder\r    2. Update package.json set type: module\r    3. Add .js to imports\r    4. npm install express\r    5. Create server.js\r    6. Add start command as node backend/server.js\r    7. Require express\r    8. Create route for / return backend is ready\r    9. Move product.js from frontend to backend\r    10. Create route for /api/products\r    11. return products\r    12. run npm start\r 6. Fetch Products From Backend\r    1. set proxy in package.json\r    2. npm install axios\r    3. use state hook\r    4. use effect hook\r    5. use reducer hook\r 7. Manage State By Reducer Hook\r    1. define reducer\r    2. update fetch data\r    3. get state from usReducer\r 8. Add bootstrap UI Framework\r    1. npm install react-bootstrap bootstrap\r    2. update App.js\r 9. Create Product and Rating Component\r    1. Create rating component\r    2. Create product component\r    3. Use rating component in Product component\r 10. Create product details screen\r     1. Fetch product from backend\r     2. Create 3 columns for image, info and action\r 11. Create Loading and Message Component\r     1. Create loading component\r     2. Use spinner component\r     3. Create message component\r     4. Create utils.js to define getError function\r 12. Implement Add to cart\r     1. Create react context\r     2. Define reducer\r     3. Create Store Provider\r     4. Implement add to cart button click handler\r 13. Create Cart Page\r     1. Create 2 columns\r     2. Display items list\r     3. Create action column\r 14. Complete Cart\r     1. Click handler for inc/dec item\r     2. Click handler remove item\r     3. Click handler for checkout\r 15. Create SignIn Screen\r     1. Create sign in form\r     2. Add email and password\r     3. Add SignIn button\r 16. Connect to MongoDB Database\r     1. Create atlas mongodb database\r     2. Connect to mongodb database\r 17. Seed Sample Data\r     1. Create Product Model\r     2. Create User Model\r     3. Create Seed Route\r     4. Use Route in Server.js\r     5. Seed Sample Product\r 18. Seed Sample Users\r     1. Create User Model\r     2. Seed Sample Users\r     3. Create User Routes\r 19. Create SignIn Backend API\r     1. Create SignIn API\r     2. Npm install jsonwebtoken\r     3. Define generateToken\r 20. Complete SignIn Screen\r     1. Handle Submit Action\r     2. Save token in store and local storage\r     3. Show user name in header\r 21. Create Shipping Screen\r     1. Create form inputs\r     2. Handle save shipping address\r     3. Add checkout wizard bar\r 22. Create SignUp Screen\r     1. Create input form\r     2. Handle submit\r     3. Create backend api\r 23. Fix Interface\r     1. Header\r     2. SignIn\r     3. SignUp\r     4. Shipping address\r 24. Implement Select Payment Method\r     1. Create input forms\r     2. Handle Submit\r 25. Create Place Order Screen\r     1. show cart items, payment and address\r     2. handle place order action\r     3. create order create api\r 26. Create Order Screen\r     1. Create backend api for order/:id\r     2. Fetch order api in frontend\r     3. Show order information in 2 columns\r 27. Pay Order By PayPal\r     1. generate paypal client id\r     2. create api to return client id\r     3. install react-paypal-js\r     4. use PayPalScriptProvider in index.js\r     5. use usePayPalScriptReducer in Order Screen\r     6. implement loadPaypalScript function\r     7. render paypal button\r     8. implement onApprove payment function\r     9. create pay order api in backend\r 28. Display Order History\r     1. create order screen\r     2. create order history api\r     3. use api in the frontend\r 29. Create Profile Screen\r     1. get user info from context\r     2. show user information\r     3. create user update api\r     4. update user info\r 30. Fix UI\r 31. Publish to heroku\r     1. Create and config node project\r     2. Server build folder in frontend folder\r     3. Connect it to github\r     4. Create mongodb atlas database\r     5. Set database connection in heroku env variables\r     6. Commit and push",
  "main": "index.js",
  "scripts": {
    "build": "cd backend && npm install && cd ../frontend && npm install && npm run build",
    "start": "node backend/server.js",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/vanutcho123/mern-H2SHOP.git"
  },
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/vanutcho123/mern-H2SHOP/issues"
  },
  "homepage": "https://github.com/vanutcho123/mern-H2SHOP#readme"
}
